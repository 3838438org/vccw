# encoding: utf-8
# vim: ft=ruby expandtab shiftwidth=2 tabstop=2

VAGRANTFILE_API_VERSION = "2"

#
# Configuration for the WordPress
#

WP_VERSION           = 'latest' # latest or 3.4 or later or http(s):// URL to zipfile
WP_LANG              = "en_US" # WordPress locale (e.g. ja)

WP_HOSTNAME          = "wordpress.local" # e.g example.com
WP_IP                = "192.168.33.10" # host ip address

WP_TITLE             = "Welcome to the Vagrant" # title
WP_ADMIN_USER        = "admin" # default user
WP_ADMIN_PASS        = "admin" # default user's password

WP_DB_PREFIX         = 'wp_' # Database prefix
WP_DB_HOST           = 'localhost' # or WP_IP and other
WP_DB_NAME           = 'wordpress'
WP_DB_USER           = 'wordpress'
WP_DB_PASS           = 'wordpress'

WP_DEFAULT_PLUGINS   = %w(theme-check plugin-check hotfix dynamic-hostname) # default plugins
WP_DEFAULT_THEME     = '' # e.g. twentythirteen

WP_DIR               = '' # e.g. /wp or wp or other
WP_IS_MULTISITE      = false # enable multisite when true
WP_FORCE_SSL_ADMIN   = false # enable force ssl admin when true
WP_DEBUG             = true # enable debug mode
WP_SAVEQUERIES       = false # save the database queries to an array
WP_THEME_UNIT_TEST   = false # automatic import theme unit test data

WP_ALWAYS_RESET      = true # always reset database

WP_CHEF_COOKBOOKS_PATH = Dir.pwd # path to the cookbooks (e.g. ~/vagrant-wp)

if WP_LANG === 'ja' then
  WP_THEME_UNIT_TEST_DATA_URI = 'https://raw.github.com/jawordpressorg/theme-test-data-ja/v1.0/wordpress-theme-test-date-ja.xml'
else
  WP_THEME_UNIT_TEST_DATA_URI = 'https://wpcom-themes.svn.automattic.com/demo/theme-unit-test-data.xml'
end

# end configuration


# set up wordmove
# https://github.com/welaika/wordmove

File.open('Movefile', 'w').write <<-EOS
local:
  vhost: "http://#{File.join(WP_HOSTNAME, WP_DIR)}"
  wordpress_path: "#{Dir.pwd}/www/wordpress" # use an absolute path here

  database:
    name: "#{WP_DB_NAME}"
    user: "#{WP_DB_USER}"
    password: "#{WP_DB_PASS}"
    host: "#{WP_IP}"

staging:
  vhost: "http://remote.com"
  wordpress_path: "/var/www/your_site" # use an absolute path here

  database:
    name: "database_name"
    user: "user"
    password: "password"
    host: "host"
    # port: "3308" # Use just in case you have exotic server config

  exclude:
    - ".git/"
    - ".gitignore"
    - ".sass-cache/"
    - "bin/"
    - "tmp/*"
    - "Gemfile*"
    - "Movefile"
    - "wp-config.php"
    - "wp-content/*.sql"

  # paths: # you can customize wordpress internal paths
  #   wp_content: "wp-content"
  #   uploads: "wp-content/uploads"
  #   plugins: "wp-content/plugins"
  #   themes: "wp-content/themes"
  #   languages: "wp-content/languages"
  #   themes: "wp-content/themes"

  # ssh:
  #   host: "host"
  #   user: "user"
  #   password: "password" # password is optional, will use public keys if available.
  #   port: 22 # Port is optional
  #   rsync_options: "--verbose" # Additional rsync options, optional
  #   gateway: # Gateway is optional
  #     host: "host"
  #     user: "user"
  #     password: "password" # password is optional, will use public keys if available.

  # ftp:
  #   user: "user"
  #   password: "password"
  #   host: "host"
  #   passive: true

# production: # multiple environments can be specified
#   [...]
EOS

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "cent64_minimal_i386"
  config.vm.box_url = "http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-i386-v20130427.box"

  config.vm.hostname = WP_HOSTNAME
  config.vm.network :private_network, ip: WP_IP

  config.vm.synced_folder "www/wordpress/", "/var/www/wordpress", :create => "true"

  config.hostsupdater.remove_on_suspend = true

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end

  config.vm.provision :chef_solo do |chef|

    chef.cookbooks_path = [
      File.join(WP_CHEF_COOKBOOKS_PATH, "cookbooks"),
      File.join(WP_CHEF_COOKBOOKS_PATH, "site-cookbooks")
    ]

    chef.json = {
      :apache => {
        :docroot_dir  => '/var/www/wordpress',
        :user         => 'vagrant',
        :group        => 'vagrant',
        :listen_ports => ["80", "443"]
      },
      :php => {
        :packages => %w(php php-cli php-devel php-mbstring php-gd php-xml php-mysql)
      },
      :mysql => {
        :bind_address           => "0.0.0.0",
        :server_debian_password => "wordpress",
        :server_root_password   => "wordpress",
        :server_repl_password   => "wordpress"
      },
      "wp-install" => {
        :wp_version        => WP_VERSION,
        :url               => "http://" << File.join(WP_HOSTNAME, WP_DIR),
        :wpdir             => File.join('/var/www/wordpress', WP_DIR),
        :locale            => WP_LANG,
        :admin_user        => WP_ADMIN_USER,
        :admin_password    => WP_ADMIN_PASS,
        :default_plugins   => WP_DEFAULT_PLUGINS,
        :default_theme     => WP_DEFAULT_THEME,
        :title             => WP_TITLE,
        :is_multisite      => WP_IS_MULTISITE,
        :force_ssl_admin   => WP_FORCE_SSL_ADMIN,
        :debug_mode        => WP_DEBUG,
        :savequeries       => WP_SAVEQUERIES,
        :theme_unit_test   => WP_THEME_UNIT_TEST,
        :theme_unit_test_data_url => WP_THEME_UNIT_TEST_DATA_URI,
        :always_reset      => WP_ALWAYS_RESET,
        :dbhost            => WP_DB_HOST,
        :dbname            => WP_DB_NAME,
        :dbuser            => WP_DB_USER,
        :dbpassword        => WP_DB_PASS,
        :dbprefix          => WP_DB_PREFIX
      }
    }

    chef.add_recipe "yum::epel"
    chef.add_recipe "iptables"
    chef.add_recipe "apache2"
    chef.add_recipe "apache2::mod_php5"
    chef.add_recipe "apache2::mod_ssl"
    chef.add_recipe "mysql::server"
    chef.add_recipe "mysql::ruby"
    chef.add_recipe "php::package"
    chef.add_recipe "wp-cli"
    chef.add_recipe "wp-install"
    chef.add_recipe "wp-i18n"

  end

end
